@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  @font-face {
    font-family: 'Pixelsplitter';
    src: url('/fonts/pixelsplitter-regular.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@400;700&display=swap');

  :root {
    --pixel-size: 2px;
    --grid-color: rgba(30, 144, 255, 0.08);
  }

  html {
    scroll-behavior: smooth;
  }
  
  body {
    @apply bg-support-black text-support-white cursor-none font-sans text-lg;
    image-rendering: pixelated;
    background-image: 
      linear-gradient(var(--grid-color) 1px, transparent 1px),
      linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
    background-size: 32px 32px;
    perspective: 1000px;
  }

  h1, .h1 {
    @apply font-pixel text-[44px] leading-tight;
    color: theme('colors.primary.lime');
    text-shadow: 
      2px 2px theme('colors.secondary.blue'),
      0 0 10px theme('colors.primary.lime/30');
  }

  h2, .h2 {
    @apply font-sans font-bold text-[32px] leading-tight;
    color: theme('colors.secondary.blue');
    text-shadow: 0 0 20px theme('colors.secondary.blue/30');
  }

  p, .body-text {
    @apply font-sans text-[18px] leading-relaxed;
    text-shadow: 0 0 1px theme('colors.support.white/50');
  }

  ::-webkit-scrollbar {
    display: none;
  }
}

@layer components {
  .pixel-border {
    box-shadow: 
      var(--pixel-size) var(--pixel-size) 0 0 theme('colors.secondary.blue'),
      calc(var(--pixel-size) * -1) calc(var(--pixel-size) * -1) 0 0 theme('colors.primary.lime');
    transition: all 0.3s ease;
  }

  .pixel-border:hover {
    transform: translate(calc(var(--pixel-size) * -1), calc(var(--pixel-size) * -1));
    box-shadow: 
      calc(var(--pixel-size) * 2) calc(var(--pixel-size) * 2) 0 0 theme('colors.secondary.blue'),
      calc(var(--pixel-size) * -2) calc(var(--pixel-size) * -2) 0 0 theme('colors.primary.lime');
  }

  .cyber-glitch {
    position: relative;
    text-shadow: 
      2px 2px theme('colors.secondary.blue'),
      -1px -1px theme('colors.primary.lime'),
      0 0 8px currentColor;
    animation: glitch 3s ease-in-out infinite;
  }

  .retro-card {
    @apply bg-support-black/80 backdrop-blur-sm;
    clip-path: polygon(
      0 0,
      100% 0,
      100% calc(100% - 30px),
      calc(100% - 30px) 100%,
      0 100%
    );
    border: 1px solid theme('colors.secondary.blue');
    box-shadow: 
      inset 0 0 20px theme('colors.secondary.blue/30'),
      0 0 20px theme('colors.primary.lime/30');
    transform-style: preserve-3d;
    transition: all 0.3s ease;
  }

  .retro-card::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      transparent 50%,
      theme('colors.secondary.blue/10') 50%
    );
    background-size: 100% 4px;
    animation: scan 8s linear infinite;
    opacity: 0.5;
  }

  .floating-3d {
    transform-style: preserve-3d;
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    transition: transform 0.3s ease;
  }

  .floating-3d:hover {
    transform: perspective(1000px) rotateX(2deg) rotateY(2deg);
  }
}

@keyframes glitch {
  0%, 100% {
    text-shadow: 
      2px 2px theme('colors.secondary.blue'),
      -1px -1px theme('colors.primary.lime'),
      0 0 8px currentColor;
  }
  33% {
    text-shadow: 
      -2px -2px theme('colors.secondary.blue'),
      1px 1px theme('colors.primary.lime'),
      0 0 8px currentColor;
  }
  66% {
    text-shadow: 
      2px -2px theme('colors.secondary.blue'),
      -1px 1px theme('colors.primary.lime'),
      0 0 8px currentColor;
  }
}

@keyframes scan {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 100%;
  }
}

.section-divider .light-flare {
  background: linear-gradient(
    90deg,
    transparent,
    theme('colors.secondary.blue/20'),
    theme('colors.primary.lime/20'),
    transparent
  );
  animation: flare 8s ease-in-out infinite;
  opacity: 0.3;
}

@keyframes flare {
  0%, 100% {
    transform: translateX(-100%);
  }
  50% {
    transform: translateX(100%);
  }
}

.pixel-corners {
  clip-path: polygon(
    0 4px,
    4px 4px,
    4px 0,
    calc(100% - 4px) 0,
    calc(100% - 4px) 4px,
    100% 4px,
    100% calc(100% - 4px),
    calc(100% - 4px) calc(100% - 4px),
    calc(100% - 4px) 100%,
    4px 100%,
    4px calc(100% - 4px),
    0 calc(100% - 4px)
  );
}

.angled-section {
  clip-path: polygon(
    0 0,
    100% 0,
    100% calc(100% - 100px),
    85% 100%,
    0 100%
  );
}

.scanlines {
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 0, 0, 0.5) 51%
  );
  background-size: 100% 4px;
  pointer-events: none;
}

.crt-flicker {
  animation: textShadow 1.6s infinite;
}

@keyframes textShadow {
  0% {
    text-shadow: 0.4389924193300864px 0 1px rgba(73,11,244,0.5), -0.4389924193300864px 0 1px rgba(216,246,81,0.3), 0 0 3px;
  }
  20% {
    text-shadow: 3.4794037899852017px 0 1px rgba(73,11,244,0.5), -3.4794037899852017px 0 1px rgba(216,246,81,0.3), 0 0 3px;
  }
  40% {
    text-shadow: 3.870905614848819px 0 1px rgba(73,11,244,0.5), -3.870905614848819px 0 1px rgba(216,246,81,0.3), 0 0 3px;
  }
  60% {
    text-shadow: 2.202193051050636px 0 1px rgba(73,11,244,0.5), -2.202193051050636px 0 1px rgba(216,246,81,0.3), 0 0 3px;
  }
  80% {
    text-shadow: 2.8638780614874975px 0 1px rgba(73,11,244,0.5), -2.8638780614874975px 0 1px rgba(216,246,81,0.3), 0 0 3px;
  }
  100% {
    text-shadow: 2.6208764473832513px 0 1px rgba(73,11,244,0.5), -2.6208764473832513px 0 1px rgba(216,246,81,0.3), 0 0 3px;
  }
}